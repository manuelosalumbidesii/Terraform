name: Terraform CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [devs, prod]  # matches your actual folder names

    permissions:
      id-token: write
      contents: read

    env:
      TF_WORKING_DIR: terraform/envs/${{ matrix.env }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::545209303902:role/GitHubActions-Terraform-Role
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Format Check
        run: terraform fmt -check -recursive
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Plan
        run: terraform plan -out=tfplan-${{ matrix.env }}.out
        working-directory: ${{ env.TF_WORKING_DIR }}

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ matrix.env }}
          path: ${{ env.TF_WORKING_DIR }}/tfplan-${{ matrix.env }}.out

  terraform-apply:
    needs: terraform-plan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [devs, prod]

    environment:
      name: ${{ matrix.env == 'prod' && 'production' || 'development' }}
      url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

    env:
      TF_WORKING_DIR: terraform/envs/${{ matrix.env }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::545209303902:role/GitHubActions-Terraform-Role
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ matrix.env }}
          path: ${{ env.TF_WORKING_DIR }}

      - name: Terraform Apply
        run: terraform apply tfplan-${{ matrix.env }}.out
        working-directory: ${{ env.TF_WORKING_DIR }}

  slack-notification-team:
    needs: terraform-apply
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [devs, prod]

    steps:
      - name: Send Team Slack Notifications
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: '#36a64f'
          SLACK_MESSAGE: |
            âœ… Terraform apply completed for *${{ matrix.env }}* environment.
            ðŸ”— [View workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          SLACK_TITLE: 'Terraform Deployment Success'
